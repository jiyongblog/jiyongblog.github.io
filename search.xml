<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/06/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>GitHub博客搭建（一）</title>
    <url>/2022/06/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h5 id="1-GitHub账号注册"><a href="#1-GitHub账号注册" class="headerlink" title="1.GitHub账号注册"></a>1.GitHub账号注册</h5><p> <a href="https://github.com/">官网注册</a></p>
<h5 id="2-Git安装"><a href="#2-Git安装" class="headerlink" title="2.Git安装"></a>2.Git安装</h5><p> <a href="https://git-scm.com/downloads">官网下载Git</a><br> 双击Git-2.32.0.2-64-bit.exe安装包，一路点击next即可，安装完成后鼠标右键会有Git Bash Here字样。</p>
<p> 输入以下命令，目的是将本地的Git与github链接起来。命令中引号内容自行替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;github用户名&quot;</span></span><br><span class="line">git config --global user.emai <span class="string">&quot;github邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<h5 id="3-NodeJS安装"><a href="#3-NodeJS安装" class="headerlink" title="3.NodeJS安装"></a>3.NodeJS安装</h5><p> <a href="https://nodejs.org/zh-cn/download/">官网下载NodeJS</a>，双击安装包开始安装，一路点击Next即可。<br> <img src="/images/GithubBlog1/1.png"></p>
<p> 打开cmd窗口，查看node和npm版本，下图表示正常安装完成。<br> <img src="/images/GithubBlog1/2.png" width="80%"></p>
<h6 id="修改NodeJS的全局包路径"><a href="#修改NodeJS的全局包路径" class="headerlink" title="修改NodeJS的全局包路径"></a>修改NodeJS的全局包路径</h6><p> 下载全局包时，默认保存在C盘下，可通过 npm root -g 命令查看当前路径，为避免占用C盘空间，将全局包放到其他目录下。<br> 1.在安装目录下创建两个文件夹，node_global 全局包存放，node_cache node缓存<br> <img src="/images/GithubBlog1/3.png" width="100%"><br>打开cmd，执行如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;E:\Blog\NodeJS\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;E:\Blog\NodeJS\node_cache&quot;</span></span><br></pre></td></tr></table></figure>
<p>2.修改环境变量<br>将【node_global】的路径“E:\devTools\nodejs\node_global”加入到【系统变量 】下的【PATH】 变量中<br> <img src="/images/GithubBlog1/4.png" width="65%"><br>3.测试全局路径是否修改成功<br>输入下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install express -g</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install express --global</span><br></pre></td></tr></table></figure>
<p><font color="#dd0000">注意：</font>“-g”等同于“–global”，“-g” 是全局安装，不加“-g”就是默认下载到当前目录。“-g” 表示安装到之前设置的【node_global】目录下，同时nodejs会自动地在node_global文件夹下创建【node_modules】子文件夹， 即自动下载到“E:\Blog\NodeJS\node_global\node_modules” 路径下。<br><img src="/images/GithubBlog1/5.png" width="100%"><br><font color="#dd0000">注意：</font>需要将安装文件夹的权限设置为完全控制。<br><img src="/images/GithubBlog1/6.png" width="65%"><br>包括安装文件夹下的【node_cache】、【node_global】、【node_modules】这三个文件夹。<br><img src="/images/GithubBlog1/7.png" width="100%"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title>常用语法</title>
    <url>/2022/06/12/%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h5 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">![](/images/1.png)</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;/images1.png&quot;</span> width = 80%&gt;</span><br></pre></td></tr></table></figure>

<h5 id="字体颜色"><a href="#字体颜色" class="headerlink" title="字体颜色"></a>字体颜色</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font color=<span class="string">&quot;#dd0000&quot;</span>&gt;注意：&lt;/font&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog编写常用语法</category>
      </categories>
  </entry>
</search>
